#!/bin/bash
# Wrapper script over 'git log' with pertty formatting and colors
SELF=$(basename ${BASH_SOURCE[0]})

RESET="%C(reset)"
GREEN="%C(green)"
YELLOW="%C(yellow)"
YELLOW_BOLD="%C(yellow)%C(bold)"
BLUE="%C(blue)"
RED="%C(red)"
WHITE="%C(white)"

HASH="$RESET$GREEN%h"
AUTHOR="$RESET$YELLOW%<(20)%an%x09"
DATE="$RESET$BLUE%ad"
BRANCH="$YELLOW_BOLD%d"
COMMITMSG="$RESET$WHITE%s"
SEP="$RESET$RED|"


_gll() {
  local arg1="$1"
  local nlines="$2"

  if [[ -d ${arg1} ]]; then
    cd ${arg1}
    arg1=""
  elif [[ -f ${arg1} ]]; then
    arg1=$(readlink -f "$arg1")
    cd $(dirname ${arg1})
  fi

  git --no-pager log -n${nlines} --abbrev-commit --decorate --date=short \
    --format=tformat:$HASH' '$AUTHOR' '$DATE' '$SEP' '$BRANCH' '$COMMITMSG \
    $arg1 || exit 1
}

_usage() {
  echo ${SELF} "[-n LINES] [<path-to-git-repo|tag>]"
  exit
}

_main() {
  local nlines=24

  while getopts ":n:" o; do
    case "${o}" in
      n) nlines=${OPTARG} ;;
      *) _usage ;;
    esac
  done
  shift $((OPTIND-1))

  _gll ${@:-$(pwd)} ${nlines}
}

_main "$@"

