# Common helpers
yell() {
	echo "$0: $*" >&2;
}
die() {
	yell "$*"; exit 1;
}
try() {
	"$@" || die "Failed to execute: $*";
}

# Emacs helpers
emacsclnt() {
	emacsclient -t -a "" $@
}

emacsd_start() {
	emacs --daemon
}

emacsd_stop() {
	emacsclient --eval '(kill-emacs)'
}

# Use 'most' pager for man
man() {
	env MANPAGER="most -s" man "$@"
}

# Run Vim with less.vim. Read stdin if no arguments were given.
vmore() {
	if test $# = 0; then
		vim --cmd 'let no_plugin_maps = 1' -c 'runtime! macros/less.vim' -
	else
		vim --cmd 'let no_plugin_maps = 1' -c 'runtime! macros/less.vim' "$@"
	fi
}

# Top by process-name
ptop() {
	name="$1"
	if [ -z "${name}" ]; then
    		return
	fi
	pids=$(pgrep -d',' -x ${name})
	if [ -z "${pids}" ]; then
		return
	fi
	top -p ${pids}
}

# Show installed packages using white-seperator delimiter
rpmqaf() {
	rpm -qa --qf "%{NAME} %{VERSION} %{RELEASE} %{VENDOR}\n"
}

# Show content of rpm file
rpmdump() {
	for f in "$@"; do
		try rpm2cpio "${f}" | cpio -tv
	done
}



